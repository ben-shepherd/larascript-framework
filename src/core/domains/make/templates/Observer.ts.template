import Observer from "@src/core/domains/observer/services/Observer"

interface I#name#Data {

}

export default class #name# extends Observer<I#name#Data> {  
    
    /**
     * Called when a data object is being created.
     * @param data The model data being created.
     * @returns The processed model data.
     */
    created(data: I#name#Data): I#name#Data {
        return data
    }

    /**
     * Called when a data object is being created.
     * @param data The model data being created.
     * @returns The processed model data.
     */
    creating(data: I#name#Data): I#name#Data {
        return data
    }

    /**
     * Called when a data object is being updated.
     * @param data The model data being updated.
     * @returns The processed model data.
     */
    updating(data: I#name#Data): I#name#Data {
        return data
    }

    /**
     * Called after a data object has been updated.
     * @param data The model data that has been updated.
     * @returns The processed model data.
     */
    updated(data: I#name#Data): I#name#Data {
        return data
    }

    /**
     * Called when a data object is being deleted.
     * @param data The model data being deleted.
     * @returns The processed model data.
     */
    deleting(data: I#name#Data): I#name#Data {
        return data
    }

    /**
     * Called after a data object has been deleted.
     * @param data The model data that has been deleted.
     * @returns The processed model data.
     */
    deleted(data: I#name#Data): I#name#Data {
        return data
    }
    
}